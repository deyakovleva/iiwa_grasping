<?xml version="1.0"?>
<launch>
    
    <!-- ===================================================================================== -->
    <!-- |    Lauch file to start Gazebo with an IIWA using various controllers.	         | -->
    
    <!-- |    It allows to customize the name of the robot, for each robot                   | -->
    <!-- |	  its topics will be under a nameespace with the same name as the robot's.       | -->
    
    <!-- |	  One can choose to have a joint trajectory controller or                        | -->
    <!-- |    controllers for the single joints, using the "trajectory" argument.            | -->
    <!-- ===================================================================================== -->
    
    <arg name="hardware_interface" default="PositionJointInterface" />
    <arg name="robot_name" default="iiwa" />
    <arg name="model" default="iiwa14"/>
    <arg name="trajectory" default="true"/>
    
    <!-- Loads the Gazebo world. -->
    <include file="$(find iiwa_gazebo)/launch/iiwa_world.launch">
        <arg name="hardware_interface" value="$(arg hardware_interface)" />
        <arg name="robot_name" value="$(arg robot_name)" />
        <arg name="model" value="$(arg model)" />
    </include>
    
    <!-- Spawn controllers - it uses a JointTrajectoryController -->
    <group  ns="$(arg robot_name)" if="$(arg trajectory)">
        
        <include file="$(find iiwa_control)/launch/iiwa_control.launch">
            <arg name="hardware_interface" value="$(arg hardware_interface)" />
            <arg name="controllers" value="joint_state_controller $(arg hardware_interface)_trajectory_controller PositionJointInterface_gripper_trajectory_controller" />
            <arg name="robot_name" value="$(arg robot_name)" />
            <arg name="model" value="$(arg model)" />
        </include>
        
    </group>
    
    <!-- <include file="$(find iiwa_moveit)/launch/move_group.launch">
        <arg name="publish_monitored_planning_scene" value="true" />
        <arg name="hardware_interface" value="$(arg hardware_interface)"/>
        <arg name="robot_name" value="$(arg robot_name)"/>
        <arg name="model" value="$(arg model)" />
      </include> -->

    <!-- Spawn controllers - it uses an Effort Controller for each joint -->
    <group ns="$(arg robot_name)" unless="$(arg trajectory)">
        
        <include file="$(find iiwa_control)/launch/iiwa_control.launch">
            <arg name="hardware_interface" value="$(arg hardware_interface)" />
            <arg name="controllers" value="joint_state_controller
                 $(arg hardware_interface)_J1_controller
                 $(arg hardware_interface)_J2_controller
                 $(arg hardware_interface)_J3_controller
                 $(arg hardware_interface)_J4_controller
                 $(arg hardware_interface)_J5_controller
                 $(arg hardware_interface)_J6_controller
                 $(arg hardware_interface)_J7_controller"/>
            <arg name="robot_name" value="$(arg robot_name)" />
            <arg name="model" value="$(arg model)" />
        </include>
        
    </group>

    <!-- <node pkg="nodelet" type="nodelet" name="standalone_nodelet" args="manager" output="screen"/>
    <node pkg="nodelet" type="nodelet" name="register_depth" args="load depth_image_proc/register standalone_nodelet" output="screen" respawn="false">
        <remap from="/rgb/camera_info" to="/camera/color/camera_info" />
        <remap from="/depth/camera_info" to="/camera/depth/camera_info" />
        <remap from="/depth/image_rect" to="/camera/depth/image_raw" />
    </node>
    <node pkg="nodelet" type="nodelet" name="cloudify" args="load depth_image_proc/point_cloud_xyzrgb standalone_nodelet" output="screen" respawn="false">
        <remap from="/rgb/camera_info" to="/camera/color/camera_info" />
        <remap from="/rgb/image_rect_color" to="/camera/color/image_raw" />
        <param name="queue_size" value="10" />
    </node> -->

    <!-- <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" />
    <node pkg="nodelet" type="nodelet" name="nodelet1" args="load depth_image_proc/register nodelet_manager">
        <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
        <remap from="depth/camera_info" to="/camera/depth/camera_info"/>
        <remap from="depth/image_rect" to="/camera/depth/image_raw"/>
        <remap from="depth_registered/camera_info" to="/camera/aligned_depth_to_color/camera_info"/>
        <remap from="depth_registered/image_rect" to="/camera/aligned_depth_to_color/image_raw"/>
    </node>

    <node pkg="nodelet" type="nodelet" name="nodelet2" args="load depth_image_proc/point_cloud_xyzrgb nodelet_manager">
        <remap from="rgb/image_rect_color" to="/camera/color/image_raw"/>
        <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
        <remap from="depth_registered/camera_info" to="/camera/depth/camera_info"/>
        <remap from="depth_registered/image_rect" to="/camera/depth/image_raw"/>
        <remap from="depth_registered/points" to="/camera/depth/color/points"/>
    </node> -->
    <node pkg="nodelet" type="nodelet" name="standalone_nodelet" args="manager" output="screen"/>
    <node pkg="nodelet" type="nodelet" name="register_depth" args="load depth_image_proc/register standalone_nodelet" output="screen" respawn="false">
        <remap from="/rgb/camera_info" to="/camera/color/camera_info" />
        <remap from="/depth/camera_info" to="/camera/depth/camera_info" />
        <remap from="/depth/image_rect" to="/camera/depth/image_raw" />
    </node>
    <node pkg="nodelet" type="nodelet" name="cloudify" args="load depth_image_proc/point_cloud_xyzrgb standalone_nodelet" output="screen" respawn="false">
        <remap from="/rgb/camera_info" to="/camera/color/camera_info" />
        <remap from="/rgb/image_rect_color" to="/camera/color/image_raw" />
        <param name="queue_size" value="10" />
    </node>
    
    
</launch>
